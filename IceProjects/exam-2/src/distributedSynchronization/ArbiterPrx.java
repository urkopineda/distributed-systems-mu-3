// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `exam-2.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package distributedSynchronization;

public interface ArbiterPrx extends Ice.ObjectPrx
{
    public boolean take();

    public boolean take(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_take();

    public Ice.AsyncResult begin_take(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_take(Ice.Callback __cb);

    public Ice.AsyncResult begin_take(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_take(Callback_Arbiter_take __cb);

    public Ice.AsyncResult begin_take(java.util.Map<String, String> __ctx, Callback_Arbiter_take __cb);

    public Ice.AsyncResult begin_take(IceInternal.Functional_BoolCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_take(IceInternal.Functional_BoolCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_take(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_BoolCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_take(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_BoolCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_take(Ice.AsyncResult __result);

    public void give();

    public void give(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_give();

    public Ice.AsyncResult begin_give(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_give(Ice.Callback __cb);

    public Ice.AsyncResult begin_give(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_give(Callback_Arbiter_give __cb);

    public Ice.AsyncResult begin_give(java.util.Map<String, String> __ctx, Callback_Arbiter_give __cb);

    public Ice.AsyncResult begin_give(IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_give(IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_give(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_give(java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public void end_give(Ice.AsyncResult __result);
}
